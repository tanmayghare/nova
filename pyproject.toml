[project]
name = "nova"
version = "0.1.0"
description = "An experimental intelligent browser automation agent powered by LLMs"
authors = [
    { name = "Nova Project Contributors" }
]
dependencies = [
    "playwright>=1.40.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "langchain>=0.1.0",
    "typing-extensions>=4.0.0"
]
requires-python = ">=3.9"
readme = "README.md"
license = { text = "MIT" }
keywords = ["ai", "automation", "browser", "llm", "agent", "experimental"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://github.com/yourusername/nova"
Repository = "https://github.com/yourusername/nova"
Issues = "https://github.com/yourusername/nova/issues"
Discussions = "https://github.com/yourusername/nova/discussions"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.0.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "PLE"]
ignore = ["E501"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src.nova --cov-report=term-missing"

[tool.coverage.run]
source = ["src/nova"]
omit = ["*/tests/*"]
data_file = "outputs/.coverage"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "playwright.*",
    "langchain.*",
    "pydantic.*"
]
ignore_missing_imports = true

[tool.poetry.dependencies]
python = "^3.10"
# ... other dependencies
httpx = "^0.27.0"